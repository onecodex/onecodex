name: test
on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test-matrix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]  # , windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies in a venv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off .[all,reports,testing]
      - name: Run all tests
        run: |
          . venv/bin/activate
          make test

  test-python3-w-simple-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      - name: Install dependencies in a venv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off simplejson
          pip install --progress-bar=off .[all,testing]
      - name: Run tests (w/ simplejson)
        run: |
          . venv/bin/activate
          make test

  test-python3-w-altair:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      - name: Install dependencies in a venv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off .[all,testing,reports]
      - name: Run report tests
        run: |
          . venv/bin/activate
          PYDEVD_DISABLE_FILE_VALIDATION=1 py.test tests/test_reports.py -vv

      - uses: nowsprinting/diff-pdf-action@v1
        with:
          file1: tests/data/test-report-expected.pdf
          file2: test-report-generated.pdf
          options: --verbose --output-diff=test-report-diff.pdf

      - name: Upload Report PDFs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: example reports
          path: test-report-*.pdf

  test-library-import-bare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      - name: Install dependencies in a venv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off .

      - name: Test initializing Api
        run: |
          . venv/bin/activate
          python -c 'import onecodex; onecodex.Api()'

  import-times:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      - name: Install dependencies in a venv
        run: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -q -U pip
          pip install --progress-bar=off simplejson tuna
          pip install --progress-bar=off .[all,testing]
      - name: Test import speeds
        run: |
          . venv/bin/activate
          py.test -v tests/test_speed.py
          python -X importtime -c 'import onecodex; onecodex.cli.onecodex(["--help"])' 2> import.log
          mkdir tuna && mkdir tuna/static
          tuna -o tuna/ import.log
      - name: Archive tuna videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: tuna
          path: tuna/
